{"version":3,"sources":["webpack:///src/app/Pages/home-tabs/more-page/more-page.page.html","webpack:///src/app/Pages/home-tabs/more-page/more-page-routing.module.ts","webpack:///src/app/Pages/home-tabs/more-page/more-page.module.ts","webpack:///src/app/Pages/home-tabs/more-page/more-page.page.scss","webpack:///src/app/Pages/home-tabs/more-page/more-page.page.ts","webpack:///src/app/Service/user.service.ts"],"names":["routes","path","component","loadChildren","then","m","SettingsPageModule","FavoriteDoctorsPageModule","MorePagePageRoutingModule","imports","forChild","exports","MorePagePageModule","declarations","MorePagePage","router","document","translateService","cookieService","geolocation","nativeGeocoder","langService","userService","nativeStorage","language","localStorage","getItem","locationResults","userData","getUserDetail","navigate","removeItem","getUserData","subscribe","res","userProfileData","result","data","selector","template","UserService","dataService","userEditProfile","userId","uid","fields_list","console","log","post","params","name","street","phone","email","providedIn"],"mappings":"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","file":"more-page-more-page-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref='/home-page-tabs/home-page'></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>More Page</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding\\\">\\n        <ion-list>\\n            <!--            <ion-list-header>More Details</ion-list-header>-->\\n            <ion-item>\\n                <!--                <ion-avatar slot=\\\"start\\\">-->\\n                <!--                    <img src=\\\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\\\">-->\\n                <!--                </ion-avatar>-->\\n                <!--                <ion-label>{{userData?.name}}</ion-label>-->\\n                <ion-label>{{userProfileData?.name}}</ion-label>\\n                <ion-button color=\\\"light\\\" (click)=\\\"goToSetting()\\\">\\n                    <ion-icon name=\\\"settings-outline\\\"></ion-icon>\\n                </ion-button>\\n\\n            </ion-item>\\n        </ion-list>\\n\\n        <!--        <ion-button *ngIf=\\\"language === 'ar'\\\" expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"changeLanguage()\\\">-->\\n        <!--            <ion-icon name=\\\"language-outline\\\" slot=\\\"start\\\"></ion-icon>-->\\n        <!--            English-->\\n        <!--        </ion-button>-->\\n        <!--        <ion-button *ngIf=\\\"language === 'en'\\\" expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"changeLanguage('ar')\\\">-->\\n        <!--            <ion-icon name=\\\"language-outline\\\" slot=\\\"start\\\"></ion-icon>-->\\n        <!--            العربيه-->\\n        <!--        </ion-button>-->\\n        <!--        <ion-button expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"testWhatsapp()\\\">-->\\n        <!--            <ion-icon name=\\\"log-out-outline\\\" slot=\\\"start\\\"></ion-icon>-->\\n        <!--          Test Share Whatsapp-->\\n        <!--        </ion-button>-->\\n        <ion-button expand=\\\"block\\\" fill=\\\"outline\\\" color=\\\"danger\\\" (click)=\\\"goToFavoriteDoctors()\\\">\\n            <ion-icon name=\\\"heart-outline\\\"></ion-icon>\\n            {{'Favorite Doctors'| translate}}\\n        </ion-button>\\n\\n        <ion-button expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"logOut()\\\">\\n            <ion-icon name=\\\"log-out-outline\\\" slot=\\\"start\\\"></ion-icon>\\n            {{'Log Out'| translate}}\\n        </ion-button>\\n\\n        <!--        <ion-button expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"testLocation()\\\">-->\\n        <!--            <ion-icon name=\\\"log-out-outline\\\" slot=\\\"start\\\"></ion-icon>-->\\n        <!--            Test Location-->\\n        <!--        </ion-button>-->\\n        <!--        <p *ngIf=\\\"locationResults\\\">-->\\n        <!--            {{locationResults}}-->\\n        <!--        </p>-->\\n\\n        <!--        <ion-button expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"testNativeStorage()\\\">-->\\n        <!--            <ion-icon name=\\\"log-out-outline\\\" slot=\\\"start\\\"></ion-icon>-->\\n        <!--            Test Native Storage-->\\n        <!--        </ion-button>-->\\n        <!--        {{test.property}}-->\\n    </div>\\n</ion-content>\\n\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {MorePagePage} from './more-page.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MorePagePage\n    },\n    {\n        path: 'settings',\n        loadChildren: () => import('./settings/settings.module').then(m => m.SettingsPageModule)\n    },\n    {\n        path: 'favorite-doctors',\n        loadChildren: () => import('./favorite-doctors/favorite-doctors.module').then(m => m.FavoriteDoctorsPageModule)\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class MorePagePageRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MorePagePageRoutingModule } from './more-page-routing.module';\n\nimport { MorePagePage } from './more-page.page';\nimport {TranslateModule} from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        MorePagePageRoutingModule,\n        TranslateModule\n    ],\n  declarations: [MorePagePage]\n})\nexport class MorePagePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL2hvbWUtdGFicy9tb3JlLXBhZ2UvbW9yZS1wYWdlLnBhZ2Uuc2NzcyJ9 */\";","import {Component, Inject, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {LangService} from '../../../Service/lang.service';\nimport {DOCUMENT} from '@angular/common';\nimport {TranslateService} from '@ngx-translate/core';\nimport {SocialSharing} from '@ionic-native/social-sharing/ngx';\nimport {Share} from '@capacitor/core';\nimport {NativeStorage} from '@ionic-native/native-storage/ngx';\nimport {CookieService} from 'ngx-cookie-service';\nimport {IUserData} from '../../../Models/user-data';\nimport {Geolocation} from '@ionic-native/geolocation/ngx';\nimport {NativeGeocoder} from '@ionic-native/native-geocoder/ngx';\nimport {UserService} from '../../../Service/user.service';\nimport {IUserProfile} from '../../../Models/user-profile';\n\n@Component({\n    selector: 'app-more-page',\n    templateUrl: './more-page.page.html',\n    styleUrls: ['./more-page.page.scss'],\n})\nexport class MorePagePage implements OnInit {\n    language: string = localStorage.getItem('language');\n    test;\n    userName;\n    userData: IUserData;\n    locationResults: string = '';\n    userProfileData: IUserProfile;\n\n    constructor(private router: Router,\n                @Inject(DOCUMENT) private document,\n                private translateService: TranslateService,\n                private cookieService: CookieService,\n                private geolocation: Geolocation,\n                private nativeGeocoder: NativeGeocoder,\n                private langService: LangService,\n                private userService: UserService,\n                private nativeStorage: NativeStorage) {\n        \n        if(localStorage.getItem('uid') != null){\n            this.userData = {\n                'name': localStorage.getItem('name'),\n                'session_id': localStorage.getItem('session_id'),\n                'uid': localStorage.getItem('uid')\n            }\n        }\n    }\n\n    ngOnInit() {\n\n        this.getUserDetail();\n    }\n\n    logOut() {\n        this.router.navigate(['auth-page']);\n        localStorage.removeItem('user_id');\n        localStorage.removeItem('uid');\n        localStorage.removeItem('name');\n        localStorage.removeItem('session_id');\n        this.cookieService.delete('uid', '/');\n    }\n\n    //\n    // changeLanguage(lang?: string) {\n    //     if (lang === 'ar') {\n    //         this.document.body.setAttribute('dir', 'rtl');\n    //         this.translateService.use('ar');\n    //         localStorage.setItem('language', 'ar');\n    //         this.language = 'ar';\n    //     } else {\n    //         this.document.body.setAttribute('dir', 'ltr');\n    //         this.translateService.use('en');\n    //         localStorage.setItem('language', 'en');\n    //         this.language = 'en';\n    //     }\n    //     this.langService.setLang(this.language);\n    // }\n    //\n    // async testWhatsapp() {\n    //     // this.socialSharing.shareViaWhatsApp('Test From Amr').then((res) => {\n    //     //     console.log(res);\n    //     //     // Success\n    //     // }).catch((e) => {\n    //     //     // Error!\n    //     // });\n    //     // this.socialSharing.shareViaEmail('Body', 'Subject', ['eng.amrmossad93@gmail.com']).then(() => {\n    //     //     // Success!\n    //     // }).catch(() => {\n    //     //     // Error!\n    //     // });\n    //     await Share.share({\n    //         title: 'test'\n    //     });\n    // }\n    //\n    // testLocation() {\n    //     this.geolocation.getCurrentPosition().then((resp) => {\n    //         // console.log(resp.coords.latitude);\n    //         // console.log(resp.coords.longitude);\n    //         // console.log(resp);\n    //         this.getLocation(resp.coords.latitude, resp.coords.longitude);\n    //     }).catch((error) => {\n    //         console.log('Error getting location', error);\n    //     });\n    // }\n    //\n    // getLocation(latitude, longitude) {\n    //     const options: NativeGeocoderOptions = {\n    //         useLocale: true,\n    //         maxResults: 1\n    //     };\n    //     this.nativeGeocoder.reverseGeocode(latitude, longitude, options).then((result) => {\n    //         this.locationResults = result[0].locality;\n    //     });\n    // }\n    //\n    // testNativeStorage() {\n    //     this.nativeStorage.setItem('myitem', {property: 'Object', anotherProperty: 'Value Of The Object'})\n    //         .then(\n    //             () => console.log('Stored item Successfluuly!'),\n    //             error => console.error('Error storing item', error)\n    //         );\n    //\n    //     this.nativeStorage.getItem('myitem').then((d) => {\n    //         this.test = d;\n    //         return d;\n    //     });\n    // }\n\n    getUserDetail() {\n        this.userService.getUserData().subscribe((res: { result }) => {\n            this.userProfileData = res.result.data[0];\n        });\n    }\n\n    goToSetting() {\n        this.router.navigate(['home-page-tabs', 'more-page', 'settings']);\n    }\n\n    goToFavoriteDoctors() {\n        this.router.navigate(['home-page-tabs', 'more-page', 'favorite-doctors']);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {DataService} from './data.service';\nimport {IUserData} from '../Models/user-data';\nimport {NativeStorage} from '@ionic-native/native-storage/ngx';\nimport {CookieService} from 'ngx-cookie-service';\nimport {IUserProfileEdit} from '../Models/user-profile';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    userData: IUserData;\n    userEditProfile = {} as IUserProfileEdit;\n\n    constructor(private dataService: DataService, private cookieService: CookieService) {\n    }\n\n    getUserData() {\n        const userId = {\n            // uid: this.cookieService.get('uid'),\n            uid: localStorage.getItem('uid'),\n            fields_list: ['name', 'email', 'phone', 'street']\n        };\n        console.log(userId.uid);\n        return this.dataService.post('api/view_user_data', {params: userId});\n    }\n\n    editProfile() {\n        return this.dataService.post('api/update_user_data', {\n            params: {\n                uid: localStorage.getItem('uid'),\n                data: {\n                    name: this.userEditProfile.name,\n                    street: this.userEditProfile.street,\n                    phone: this.userEditProfile.phone,\n                    email: this.userEditProfile.email,\n                }\n            }\n        });\n    }\n}\n"]}