{"version":3,"sources":["webpack:///src/app/SharedComponents/card/card.component.html","webpack:///src/app/Service/favorite.service.ts","webpack:///src/app/Service/search.service.ts","webpack:///src/app/SharedComponents/card/card.component.scss","webpack:///src/app/SharedComponents/card/card.component.ts","webpack:///src/app/SharedComponents/shared-components.module.ts"],"names":["FavoriteService","dataService","doctorId","OBJ","uid","localStorage","getItem","method","doctor_id","post","params","providedIn","SearchService","favoritesService","searchQuery","favoriteIds","favoriteDoctorsFiltered","subscribe","res","doctors","result","searchDoctors","error","getAllFavoriteDoctors","favorite_doctors","console","log","getFavoriteDoctorsFiltered","includes","forEach","c","id","name","specialty","rate_overall","image_1920","state_id","consul_fee","count_rate","isFavorite","checkInFavoriteList","push","filter","CardComponent","router","nativeStorage","searchService","favorite","removeFavorite","userData","doctorData","navigate","state","emit","selector","template","SharedComponentsModule","declarations","exports","imports"],"mappings":"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","file":"default~favorite-doctors-favorite-doctors-module~search-page-search-page-module-es5.js","sourcesContent":["export default \"<ion-card>\\n    <div class=\\\"card-doctor\\\" (click)=\\\"onBooking()\\\">\\n        <ion-grid>\\n            <ion-row>\\n                <ion-col size=\\\"3\\\" class=\\\"ion-no-padding\\\">\\n                    <img style=\\\"border-radius: 50%; height: 60px; width: 60px\\\"\\n                         [src]=\\\"'data:image/png;base64,' + doctorData.image_1920\\\" [alt]=\\\"doctorData.name\\\">\\n                </ion-col>\\n                <ion-col size=\\\"9\\\" class=\\\"ion-no-padding\\\">\\n                    <div class=\\\"doctor-details\\\">\\n                        <ion-label class=\\\"card-doctor-name\\\">{{doctorData.name}}</ion-label>\\n                        <ion-card-subtitle>{{doctorData.specialty[1]}}</ion-card-subtitle>\\n                    </div>\\n                </ion-col>\\n                <ion-col size=\\\"12\\\" class=\\\"ion-no-padding\\\">\\n                    <div class=\\\"stars\\\">\\n                        <ionic-rating-component #rating\\n                                                activeIcon=\\\"star\\\"\\n                                                defaultIcon=\\\"star-outline\\\"\\n                                                activeColor=\\\"#e0bb2e\\\"\\n                                                defaultColor=\\\"#aaaaaa\\\"\\n                                                readonly=\\\"true\\\"\\n                                                rating=\\\"{{doctorData.rate_overall}}\\\"\\n                                                fontSize=\\\"15px\\\"\\n                        >\\n                        </ionic-rating-component>\\n                        ({{doctorData.count_rate}} Rating From Visitors)\\n                    </div>\\n                </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"meta-details\\\">\\n                <ion-col size=\\\"6\\\" (click)=\\\"onBooking()\\\" class=\\\"ion-no-padding ion-text-left\\\">\\n                    <ion-icon name=\\\"location-outline\\\" color=\\\"success\\\"></ion-icon>\\n                        {{doctorData.state_id[1]}}\\n                        <!--                <ion-text color=\\\"success\\\">({{drLocationDistance}})</ion-text>-->\\n                </ion-col>\\n                <ion-col size=\\\"6\\\" (click)=\\\"onBooking()\\\" class=\\\"ion-no-padding ion-text-right\\\">\\n                    <ion-icon name=\\\"cash-outline\\\" color=\\\"success\\\"></ion-icon>\\n                        Fees\\n                        <span color=\\\"success\\\">({{doctorData.consul_fee}})</span>\\n                </ion-col>\\n            </ion-row>\\n        </ion-grid>\\n    </div>\\n\\n    <ion-card-content class=\\\"ion-no-padding\\\">\\n        <div class=\\\"item-list card-doctor-buttons\\\">\\n            <!--            <ion-icon name=\\\"time-outline\\\" slot=\\\"start\\\" color=\\\"success\\\"></ion-icon>-->\\n            <!--            <ion-label>-->\\n            <!--                Waiting Time-->\\n            <!--                <ion-text color=\\\"success\\\">{{drWaitingTime}}</ion-text>-->\\n            <!--            </ion-label>-->\\n            <div style=\\\"margin-top: 15px\\\">\\n                <ion-button class=\\\"book-now\\\" fill=\\\"outline\\\" color=\\\"success\\\" *ngIf=\\\"userData\\\" (click)=\\\"onBooking()\\\">\\n                    <ion-icon name=\\\"bookmark-outline\\\"></ion-icon>\\n                    Book\\n                </ion-button>\\n                <ion-button class=\\\"book-now\\\" color=\\\"success\\\" *ngIf=\\\"!userData\\\" (click)=\\\"onLogin()\\\">\\n                    Login\\n                </ion-button>\\n                <ion-button class=\\\"book-now\\\" fill=\\\"outline\\\" color=\\\"danger\\\"\\n                            *ngIf=\\\"userData && doctorData.isFavorite === false\\\" (click)=\\\"onClickFavorite()\\\">\\n                    <!--                    <ion-icon name=\\\"heart\\\"></ion-icon>-->\\n                    <ion-icon name=\\\"heart-outline\\\"></ion-icon>\\n                    Add To Favorite\\n                </ion-button>\\n                <ion-button class=\\\"book-now\\\" fill=\\\"outline\\\" color=\\\"danger\\\"\\n                            *ngIf=\\\"userData && doctorData.isFavorite === true\\\" (click)=\\\"onClickRemoveFavorite()\\\">\\n                    <ion-icon name=\\\"heart\\\"></ion-icon>\\n                    <!--                                        <ion-icon name=\\\"heart-outline\\\"></ion-icon>-->\\n                    Remove From Favorite\\n                </ion-button>\\n            </div>\\n\\n        </div>\\n    </ion-card-content>\\n</ion-card>\\n\";","import {Injectable} from '@angular/core';\nimport {DataService} from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FavoriteService {\n\n    constructor(private dataService: DataService) {\n    }\n\n    postDoctorAsFavorite(doctorId: number) {\n        const OBJ = {\n            uid: localStorage.getItem('uid'),\n            method: 'add',\n            doctor_id: doctorId\n        };\n        return this.dataService.post('api/patient_favorite_doctors', {params: OBJ});\n    }\n\n    removeDoctorAsFavorite(doctorId: number) {\n        const OBJ = {\n            uid: localStorage.getItem('uid'),\n            method: 'remove',\n            doctor_id: doctorId\n        };\n        return this.dataService.post('api/patient_favorite_doctors', {params: OBJ});\n    }\n\n    getAllFavoriteDoctors() {\n        return this.dataService.post('api/get_patient_favorite_doctors', {\n            params: {uid: localStorage.getItem('uid')}\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {ISearchQuery} from '../Models/search-query';\nimport {DataService} from './data.service';\nimport {IDoctorSearch} from '../Models/doctor-search';\nimport {FavoriteService} from './favorite.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchService {\n    searchQuery = {} as ISearchQuery;\n    doctors: IDoctorSearch[];\n    searchDoctors: IDoctorSearch[];\n    favoriteIds: number[] = [];\n    favoriteDoctorsFiltered = [];\n\n    constructor(private dataService: DataService, private favoritesService: FavoriteService) {\n    }\n\n\n    postSearchQuery() {\n        return this.dataService.post('api/doctor_search_query', {params: this.searchQuery}).subscribe((res: { result }) => {\n            this.doctors = res.result as IDoctorSearch[];\n            this.searchDoctors = this.doctors;\n        }, error => {\n        }, () => {\n            this.getAllFavoriteDoctors();\n        });\n    }\n\n    getAllFavoriteDoctors() {\n        this.favoritesService.getAllFavoriteDoctors().subscribe((res: { result }) => {\n            this.favoriteIds = res.result.favorite_doctors;\n            console.log(this.favoriteIds);\n        }, error => {\n        }, () => {\n            this.getFavoriteDoctorsFiltered();\n        });\n    }\n\n    checkInFavoriteList(doctorId: number) {\n        return this.favoriteIds.includes(doctorId);\n    }\n\n    getFavoriteDoctorsFiltered() {\n        this.favoriteDoctorsFiltered = [];\n        if(this.doctors){\n            this.doctors.forEach((c) => {\n                const OBJ = {\n                    doctorId: c.id,\n                    name: c.name,\n                    specialty: c.specialty,\n                    rate_overall: c.rate_overall,\n                    image_1920: c.image_1920,\n                    state_id: c.state_id,\n                    consul_fee: c.consul_fee,\n                    count_rate: c.count_rate,\n                    isFavorite: this.checkInFavoriteList(c.id)\n                };\n                this.favoriteDoctorsFiltered.push(OBJ);\n            });\n        }\n        return this.favoriteDoctorsFiltered;\n    }\n\n    getDoctorFavorites() {\n        this.favoriteDoctorsFiltered = [];\n        this.doctors.forEach((c) => {\n            const OBJ = {\n                doctorId: c.id,\n                name: c.name,\n                specialty: c.specialty,\n                rate_overall: c.rate_overall,\n                image_1920: c.image_1920,\n                state_id: c.state_id,\n                consul_fee: c.consul_fee,\n                count_rate: c.count_rate,\n                isFavorite: this.checkInFavoriteList(c.id)\n            };\n            this.favoriteDoctorsFiltered.push(OBJ);\n        });\n        return this.favoriteDoctorsFiltered.filter(c => c.isFavorite === true);\n    }\n}\n","export default \".availableCard {\\n  background-color: grey;\\n  color: #ffffff;\\n  text-align: center;\\n  border-radius: 3px;\\n  border: unset;\\n  width: 100%;\\n  line-height: 28px;\\n  margin-top: 4px;\\n}\\n\\n.doctor-details {\\n  margin-top: 0;\\n  margin-left: 10px;\\n}\\n\\n.doctor-details .card-doctor-name {\\n  font-weight: bold;\\n}\\n\\n.meta-details {\\n  font-size: 12px;\\n}\\n\\n.meta-details ion-icon {\\n  font-size: 15px;\\n  position: relative;\\n  top: 2px;\\n}\\n\\n.card-doctor {\\n  border-bottom: 1px solid #eee;\\n  padding: 0 20px;\\n}\\n\\n.card-doctor-buttons {\\n  padding: 0 20px;\\n}\\n\\n.stars {\\n  font-size: 13px;\\n}\\n\\n.stars .active-star {\\n  color: #e0bb2e;\\n}\\n\\nion-card {\\n  border-radius: 20px;\\n  box-shadow: 0px 0px 12px 2px #dedede;\\n  padding: 10px 0;\\n}\\n\\n.item-list {\\n  margin-bottom: 5px;\\n}\\n\\n.book-now {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvU2hhcmVkQ29tcG9uZW50cy9jYXJkL2NhcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7QUFDRjs7QUFDQTtFQUNFLGFBQUE7RUFDQSxpQkFBQTtBQUVGOztBQURFO0VBQ0UsaUJBQUE7QUFHSjs7QUFBQTtFQUNFLGVBQUE7QUFHRjs7QUFGRTtFQUNFLGVBQUE7RUFDQSxrQkFBQTtFQUNBLFFBQUE7QUFJSjs7QUFEQTtFQUNFLDZCQUFBO0VBQ0EsZUFBQTtBQUlGOztBQUZBO0VBQ0UsZUFBQTtBQUtGOztBQUhBO0VBQ0UsZUFBQTtBQU1GOztBQUxFO0VBQ0UsY0FBQTtBQU9KOztBQUhBO0VBQ0UsbUJBQUE7RUFDQSxvQ0FBQTtFQUNBLGVBQUE7QUFNRjs7QUFIQTtFQUNFLGtCQUFBO0FBTUY7O0FBSEE7RUFDRSxXQUFBO0FBTUYiLCJmaWxlIjoic3JjL2FwcC9TaGFyZWRDb21wb25lbnRzL2NhcmQvY2FyZC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hdmFpbGFibGVDYXJkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcbiAgY29sb3I6ICNmZmZmZmY7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBib3JkZXI6IHVuc2V0O1xuICB3aWR0aDogMTAwJTtcbiAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gIG1hcmdpbi10b3A6IDRweDtcbn1cbi5kb2N0b3ItZGV0YWlscyB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1sZWZ0OjEwcHg7XG4gIC5jYXJkLWRvY3Rvci1uYW1le1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG59XG4ubWV0YS1kZXRhaWxze1xuICBmb250LXNpemU6MTJweDtcbiAgaW9uLWljb24ge1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAycHg7XG4gIH1cbn1cbi5jYXJkLWRvY3RvcntcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZWU7XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cbi5jYXJkLWRvY3Rvci1idXR0b25ze1xuICBwYWRkaW5nOiAwIDIwcHg7XG59XG4uc3RhcnMge1xuICBmb250LXNpemU6IDEzcHg7XG4gIC5hY3RpdmUtc3RhciB7XG4gICAgY29sb3I6ICNlMGJiMmU7XG4gIH1cbn1cblxuaW9uLWNhcmQge1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBib3gtc2hhZG93OiAwcHggMHB4IDEycHggMnB4ICNkZWRlZGU7XG4gIHBhZGRpbmc6IDEwcHggMDtcbn1cblxuLml0ZW0tbGlzdCB7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxuLmJvb2stbm93IHtcbiAgd2lkdGg6IDEwMCU7XG59XG4iXX0= */\";","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NativeStorage} from '@ionic-native/native-storage/ngx';\nimport {IUserData} from '../../Models/user-data';\nimport {IDoctorSearch} from '../../Models/doctor-search';\nimport { FavoriteService } from 'src/app/Service/favorite.service';\nimport { SearchService } from 'src/app/Service/search.service';\n\n@Component({\n    selector: 'app-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n    @Input() doctorData: any;\n    userName;\n    userData: IUserData;\n\n    // tslint:disable-next-line:no-output-native\n    @Output() favorite: EventEmitter<any> = new EventEmitter();\n    @Output() removeFavorite: EventEmitter<any> = new EventEmitter();\n\n    constructor(private router: Router, private nativeStorage: NativeStorage, private searchService: SearchService) {\n    }\n\n    ngOnInit() {\n        if(localStorage.getItem('uid') != null){\n            this.userData = {\n                'name': localStorage.getItem('name'),\n                'session_id': localStorage.getItem('session_id'),\n                'uid': localStorage.getItem('uid')\n            }\n            console.log(this.userData)\n            this.doctorData.isFavorite = this.searchService.checkInFavoriteList(this.doctorData.id);\n        }\n    }\n\n    onBooking() {\n        this.router.navigate(['/doctor'], {\n            state: {\n                doctorData: this.doctorData\n            }\n        });\n    }\n\n    onLogin() {\n        this.router.navigate(['/auth-page']);\n    }\n\n    onClickFavorite() {\n        this.favorite.emit(null);\n    }\n\n    onClickRemoveFavorite() {\n        this.removeFavorite.emit(null);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardComponent} from './card/card.component';\nimport {IonicModule} from '@ionic/angular';\nimport {IonicRatingComponentModule} from 'ionic-rating-component';\n\n\n@NgModule({\n  declarations: [CardComponent],\n  exports: [\n    CardComponent\n  ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        IonicRatingComponentModule\n    ],\n})\nexport class SharedComponentsModule {\n}\n"]}