{"version":3,"sources":["webpack:///src/app/Pages/location-for-doctors/location-for-doctors.page.html","webpack:///src/app/Pages/location-for-doctors/location-for-doctors-routing.module.ts","webpack:///src/app/Pages/location-for-doctors/location-for-doctors.module.ts","webpack:///src/app/Pages/location-for-doctors/location-for-doctors.page.scss","webpack:///src/app/Pages/location-for-doctors/location-for-doctors.page.ts"],"names":["routes","path","component","LocationForDoctorsPageRoutingModule","imports","forChild","exports","LocationForDoctorsPageModule","declarations","LocationForDoctorsPage","renderer","googleMapService","markers","getGoogleMap","then","googleMap","latLang","google","maps","LatLng","mapOptions","center","zoom","mapTypeId","MapTypeId","ROADMAP","map","Map","mapElement","nativeElement","getLocationsTest","subscribe","res","locations","console","log","error","updateMap","win","window","googleModule","Promise","resolve","reslove","reject","script","document","createElement","src","googleMapsApiKey","async","defer","body","appendChild","onload","loadedGoogleModule","lat","lng","getAddress","marker","setMap","loc","latLng","Marker","position","animation","Animation","DROP","push","selector","template"],"mappings":"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","file":"Pages-location-for-doctors-location-for-doctors-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref='/home-page-tabs/home-page'></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>location For Doctors With Google Map</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"map\\\" #googleMap></div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocationForDoctorsPage } from './location-for-doctors.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocationForDoctorsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LocationForDoctorsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LocationForDoctorsPageRoutingModule } from './location-for-doctors-routing.module';\n\nimport { LocationForDoctorsPage } from './location-for-doctors.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LocationForDoctorsPageRoutingModule\n  ],\n  declarations: [LocationForDoctorsPage]\n})\nexport class LocationForDoctorsPageModule {}\n","export default \".map {\\n  height: 100%;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvbG9jYXRpb24tZm9yLWRvY3RvcnMvbG9jYXRpb24tZm9yLWRvY3RvcnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL2xvY2F0aW9uLWZvci1kb2N0b3JzL2xvY2F0aW9uLWZvci1kb2N0b3JzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXAge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4iXX0= */\";","import {AfterViewInit, Component, ElementRef, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport {environment} from '../../../environments/environment';\nimport {GoogleMapService} from '../../Service/google-map.service';\nimport {map} from 'rxjs/operators';\nimport {ILocationLatLng} from '../../Models/location-lat-lng';\n\ndeclare var google;\n\n@Component({\n    selector: 'app-location-for-doctors',\n    templateUrl: './location-for-doctors.page.html',\n    styleUrls: ['./location-for-doctors.page.scss'],\n})\nexport class LocationForDoctorsPage implements OnInit, AfterViewInit {\n    @ViewChild('googleMap') mapElement: ElementRef;\n    map: any;\n    markers = [];\n    locations: ILocationLatLng[];\n\n    constructor(private renderer: Renderer2, private googleMapService: GoogleMapService) {\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n        this.getGoogleMap().then(googleMap => {\n            // const mapEl = this.googleMapElement.nativeElement;\n            // // tslint:disable-next-line:no-shadowed-variable\n            // const map = new googleMap.Map(mapEl, {\n            //     center: {lat: 26.8206, lng: 30.8025},\n            //     zoom: 5,\n            //     mapTypeId: googleMap.maps.MapTypeId.ROADMAP\n            // });\n            // googleMap.event.addListenerOnce(map, 'idle', () => {\n            //     this.renderer.addClass(this.mapElement.nativeElement, 'visible');\n            // });\n            // map.addListener('click', event => {\n            //     const selectedLocation = {\n            //         lat: event.latLng.lat(),\n            //         lng: event.latLng.lng()\n            //     };\n            //\n            //     if (selectedLocation) {\n            //         this.getAddress(selectedLocation.lat, selectedLocation.lng);\n            //     }\n            // });\n\n            const latLang = new google.maps.LatLng(26.8206, 30.8025);\n            const mapOptions = {\n                center: latLang,\n                zoom: 5,\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            };\n            this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n            this.googleMapService.getLocationsTest().subscribe(res => {\n                this.locations = res as ILocationLatLng[];\n                console.log(this.locations);\n            }, error => {\n            }, () => {\n                //    Markers\n                this.updateMap(this.locations);\n            });\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    private getGoogleMap(): Promise<any> {\n        const win = window as any;\n        const googleModule = win.google;\n        if (googleModule && googleModule.maps) {\n            return Promise.resolve(googleModule.maps);\n        }\n        return new Promise((reslove, reject) => {\n            const script = document.createElement('script');\n            script.src = 'https://maps.googleapis.com/maps/api/js?key=' + environment.googleMapsApiKey;\n            script.async = true;\n            script.defer = true;\n            document.body.appendChild(script);\n            script.onload = () => {\n                const loadedGoogleModule = win.google;\n                if (loadedGoogleModule && loadedGoogleModule.maps) {\n                    reslove(loadedGoogleModule.maps);\n                } else {\n                    reject('Error Happened In Google SDK Try Again later');\n                }\n            };\n        });\n    }\n\n    private getAddress(lat: number, lng: number) {\n        this.googleMapService.getAddress(lat, lng).subscribe(res => {\n            console.log(res);\n        });\n    }\n\n    updateMap(locations: ILocationLatLng[]) {\n        this.markers.map(marker => marker.setMap(null));\n        this.markers = [];\n        for (const loc of locations) {\n            const latLng = new google.maps.LatLng(loc.lat, loc.lng);\n            const marker = new google.maps.Marker({\n                position: latLng,\n                animation: google.maps.Animation.DROP,\n                map: this.map\n            });\n            this.markers.push(marker);\n        }\n    }\n}\n"]}