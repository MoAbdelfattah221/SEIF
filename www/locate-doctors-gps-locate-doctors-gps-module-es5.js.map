{"version":3,"sources":["webpack:///src/app/Pages/home-tabs/search-page/locate-doctors-gps/locate-doctors-gps.page.html","webpack:///src/app/Pages/home-tabs/search-page/locate-doctors-gps/locate-doctors-gps-routing.module.ts","webpack:///src/app/Pages/home-tabs/search-page/locate-doctors-gps/locate-doctors-gps.module.ts","webpack:///src/app/Pages/home-tabs/search-page/locate-doctors-gps/locate-doctors-gps.page.scss","webpack:///src/app/Pages/home-tabs/search-page/locate-doctors-gps/locate-doctors-gps.page.ts"],"names":["routes","path","component","LocateDoctorsGPSPageRoutingModule","imports","forChild","exports","LocateDoctorsGPSPageModule","declarations","LocateDoctorsGPSPage","renderer","geolocation","nativeGeocoder","googleMapService","markers","getLocationLogLat","getGoogleMap","then","googleMap","latLang","google","maps","LatLng","mapOptions","center","zoom","mapTypeId","MapTypeId","ROADMAP","map","Map","mapElement","nativeElement","error","console","log","win","window","googleModule","Promise","resolve","reslove","reject","script","document","createElement","src","googleMapsApiKey","async","defer","body","appendChild","onload","loadedGoogleModule","lat","lng","getAddress","subscribe","res","locations","marker","setMap","loc","latLng","Marker","position","animation","Animation","DROP","push","getCurrentPosition","resp","getLocation","coords","latitude","longitude","getPartners","result","partner","partner_latitude","partner_longitude","updateMap","options","useLocale","maxResults","reverseGeocode","locationResults","locality","selector","template"],"mappings":"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","file":"locate-doctors-gps-locate-doctors-gps-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref='/home-page-tabs/home-page'></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Doctors Location</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"map\\\" #googleMap></div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocateDoctorsGPSPage } from './locate-doctors-gps.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocateDoctorsGPSPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LocateDoctorsGPSPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LocateDoctorsGPSPageRoutingModule } from './locate-doctors-gps-routing.module';\n\nimport { LocateDoctorsGPSPage } from './locate-doctors-gps.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LocateDoctorsGPSPageRoutingModule\n  ],\n  declarations: [LocateDoctorsGPSPage]\n})\nexport class LocateDoctorsGPSPageModule {}\n","export default \".map {\\n  height: 100%;\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvaG9tZS10YWJzL3NlYXJjaC1wYWdlL2xvY2F0ZS1kb2N0b3JzLWdwcy9sb2NhdGUtZG9jdG9ycy1ncHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL2hvbWUtdGFicy9zZWFyY2gtcGFnZS9sb2NhdGUtZG9jdG9ycy1ncHMvbG9jYXRlLWRvY3RvcnMtZ3BzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXAge1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4iXX0= */\";","import {AfterViewInit, Component, ElementRef, OnInit, Renderer2, ViewChild} from '@angular/core';\nimport {ILocationLatLng} from '../../../../Models/location-lat-lng';\nimport {GoogleMapService} from '../../../../Service/google-map.service';\nimport {environment} from '../../../../../environments/environment';\nimport {NativeGeocoder, NativeGeocoderOptions} from '@ionic-native/native-geocoder/ngx';\nimport {Geolocation} from '@ionic-native/geolocation/ngx';\n\ndeclare var google;\n\n@Component({\n    selector: 'app-locate-doctors-gps',\n    templateUrl: './locate-doctors-gps.page.html',\n    styleUrls: ['./locate-doctors-gps.page.scss'],\n})\nexport class LocateDoctorsGPSPage implements OnInit, AfterViewInit {\n    @ViewChild('googleMap') mapElement: ElementRef;\n    map: any;\n    markers = [];\n    locations: ILocationLatLng[];\n    locationResults;\n\n    constructor(private renderer: Renderer2,\n                private geolocation: Geolocation,\n                private nativeGeocoder: NativeGeocoder,\n                private googleMapService: GoogleMapService) {\n    }\n\n    ngOnInit() {\n        this.getLocationLogLat();\n    }\n\n    ngAfterViewInit() {\n        this.getGoogleMap().then(googleMap => {\n\n            const latLang = new google.maps.LatLng(26.8206, 30.8025);\n            const mapOptions = {\n                center: latLang,\n                zoom: 6,\n                mapTypeId: google.maps.MapTypeId.ROADMAP\n            };\n            this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n            this.getLocationLogLat();\n            // this.googleMapService.getLocationsTest().subscribe(res => {\n            //     this.locations = res as ILocationLatLng[];\n            //     // console.log(this.locations);\n            // }, error => {\n            // }, () => {\n            //     //    Markers\n            //     this.updateMap(this.locations);\n            // });\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    private getGoogleMap(): Promise<any> {\n        const win = window as any;\n        const googleModule = win.google;\n        if (googleModule && googleModule.maps) {\n            return Promise.resolve(googleModule.maps);\n        }\n        return new Promise((reslove, reject) => {\n            const script = document.createElement('script');\n            script.src = 'https://maps.googleapis.com/maps/api/js?key=' + environment.googleMapsApiKey;\n            script.async = true;\n            script.defer = true;\n            document.body.appendChild(script);\n            script.onload = () => {\n                const loadedGoogleModule = win.google;\n                if (loadedGoogleModule && loadedGoogleModule.maps) {\n                    reslove(loadedGoogleModule.maps);\n                } else {\n                    reject('Error Happened In Google SDK Try Again later');\n                }\n            };\n        });\n    }\n\n    private getAddress(lat: number, lng: number) {\n        this.googleMapService.getAddress(lat, lng).subscribe(res => {\n            console.log(res);\n        });\n    }\n\n    updateMap(locations: ILocationLatLng[]) {\n        this.markers.map(marker => marker.setMap(null));\n        this.markers = [];\n        for (const loc of locations) {\n            const latLng = new google.maps.LatLng(loc.lat, loc.lng);\n            const marker = new google.maps.Marker({\n                position: latLng,\n                animation: google.maps.Animation.DROP,\n                map: this.map\n            });\n            this.markers.push(marker);\n        }\n    }\n\n    getLocationLogLat() {\n        this.geolocation.getCurrentPosition().then((resp) => {\n            // console.log(resp);\n            var locations = [];\n            this.getLocation(resp.coords.latitude, resp.coords.longitude);\n            this.googleMapService.getPartners(resp.coords.latitude, resp.coords.longitude).subscribe((res: any) => {\n                console.log(res.result);\n                for(let partner of res.result){\n                    locations.push({\n                        'lat': partner.partner_latitude,\n                        'lng': partner.partner_longitude\n                    })\n                }\n            }, error => {\n            }, () => {\n                //    Markers\n                this.updateMap(locations);\n            });\n        }).catch((error) => {\n            console.log('Error getting location', error);\n        });\n    }\n\n    getLocation(latitude, longitude) {\n        const options: NativeGeocoderOptions = {\n            useLocale: true,\n            maxResults: 1\n        };\n        this.nativeGeocoder.reverseGeocode(latitude, longitude, options).then((result) => {\n            this.locationResults = result[0].locality;\n        });\n    }\n}\n"]}