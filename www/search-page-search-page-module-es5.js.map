{"version":3,"sources":["webpack:///src/app/Pages/home-tabs/search-page/search-page.page.html","webpack:///src/app/Pages/home-tabs/search-page/search-page-routing.module.ts","webpack:///src/app/Pages/home-tabs/search-page/search-page.module.ts","webpack:///src/app/Pages/home-tabs/search-page/search-page.page.scss","webpack:///src/app/Pages/home-tabs/search-page/search-page.page.ts"],"names":["routes","path","component","loadChildren","then","m","SearchBySpecialtyAndAreaPageModule","SearchByDoctorNamePageModule","FilterDoctorsPageModule","LocateDoctorsGPSPageModule","SearchPagePageRoutingModule","imports","forChild","exports","SearchPagePageModule","declarations","SearchPagePage","router","geolocation","searchService","toastController","favoritesService","nativeGeocoder","getLocationLogLat","searchForDoctor","getCurrentPosition","resp","getLocation","coords","latitude","longitude","error","console","log","options","useLocale","maxResults","reverseGeocode","result","locationResults","locality","postSearchQuery","event","val","target","value","searchDoctors","doctors","trim","filter","item","name","toLowerCase","indexOf","navigate","doctor","postDoctorAsFavorite","doctorId","subscribe","res","create","message","position","duration","toast","present","removeDoctorAsFavorite","selector","template"],"mappings":"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","file":"search-page-search-page-module-es5.js","sourcesContent":["export default \"<!--<ion-content>-->\\n<!--    <div class=\\\"ion-padding\\\">-->\\n<!--        <div class=\\\"container ion-text-center\\\">-->\\n<!--            <img src=\\\"assets/Images/mix%20logo.png\\\" alt=\\\"Logo\\\">-->\\n<!--        </div>-->\\n<!--        <br>-->\\n<!--        <br>-->\\n<!--        <ion-button expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"goToSearchBySpecialtyAndArea()\\\">-->\\n<!--            <ion-icon name=\\\"git-network-outline\\\" slot=\\\"start\\\"></ion-icon>-->\\n<!--            Search By Specialty And Area-->\\n<!--            <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\"></ion-icon>-->\\n<!--        </ion-button>-->\\n<!--        <br>-->\\n<!--        <ion-button expand=\\\"block\\\" color=\\\"success\\\" (click)=\\\"goToSearchByDoctorName()\\\">-->\\n<!--            <ion-icon name=\\\"person-outline\\\" slot=\\\"start\\\"></ion-icon>-->\\n<!--            Search By Doctor Name-->\\n<!--            <ion-icon name=\\\"chevron-forward-outline\\\" slot=\\\"end\\\"></ion-icon>-->\\n<!--        </ion-button>-->\\n<!--    </div>-->\\n<!--</ion-content>-->\\n\\n\\n<ion-header class=\\\"ion-no-border\\\" class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref='/home-page-tabs/home-page'></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Search In {{locationResults}}</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <div class=\\\"ion-padding\\\">\\n        <ion-row>\\n            <ion-col size=\\\"12\\\">\\n                <div class=\\\"search-bar\\\">\\n                    <ion-searchbar #search (ionChange)=\\\"searchDoctorSpec($event)\\\"></ion-searchbar>\\n                    <!--                    <div class=\\\"search-bar-buttons\\\">-->\\n                    <!--                        <ion-grid>-->\\n                    <!--                            <ion-row>-->\\n                    <!--                                <ion-col size=\\\"6\\\">-->\\n                    <!--                                    <ion-button (click)=\\\"goToFilterPage()\\\" expand=\\\"block\\\" size=\\\"small\\\" fill=\\\"outline\\\"-->\\n                    <!--                                                color=\\\"success\\\">-->\\n                    <!--                                        <ion-icon name=\\\"filter-outline\\\"></ion-icon>-->\\n                    <!--                                    </ion-button>-->\\n                    <!--                                </ion-col>-->\\n                    <!--                                <ion-col size=\\\"6\\\">-->\\n                    <!--                                    <ion-button (click)=\\\"goToFilterLocationGPSPage()\\\" expand=\\\"block\\\" size=\\\"small\\\"-->\\n                    <!--                                                fill=\\\"outline\\\" color=\\\"success\\\">-->\\n                    <!--                                        <ion-icon name=\\\"location-outline\\\"></ion-icon>-->\\n                    <!--                                    </ion-button>-->\\n                    <!--                                </ion-col>-->\\n                    <!--                            </ion-row>-->\\n                    <!--                        </ion-grid>-->\\n                    <!--                    </div>-->\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n\\n        <div *ngFor=\\\"let doctor of searchService.searchDoctors\\\">\\n            <app-card [doctorData]=\\\"doctor\\\" (favorite)=\\\"onFavoriteDoctor(doctor)\\\"\\n                      (removeFavorite)=\\\"onRemoveFavoriteDoctor(doctor)\\\"></app-card>\\n        </div>\\n    </div>\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button (click)=\\\"goToFilterPage()\\\" color=\\\"success\\\">\\n            <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"start\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button (click)=\\\"goToFilterLocationGPSPage()\\\" color=\\\"success\\\">\\n            <ion-icon name=\\\"location-outline\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SearchPagePage } from './search-page.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPagePage\n  },\n  {\n    path: 'search-by-specialty-and-area',\n    loadChildren: () => import('./search-by-specialty-and-area/search-by-specialty-and-area.module').then( m => m.SearchBySpecialtyAndAreaPageModule)\n  },\n  {\n    path: 'search-by-doctor-name',\n    loadChildren: () => import('./search-by-doctor-name/search-by-doctor-name.module').then( m => m.SearchByDoctorNamePageModule)\n  },\n  {\n    path: 'filter-doctors',\n    loadChildren: () => import('./filter-doctors/filter-doctors.module').then( m => m.FilterDoctorsPageModule)\n  },\n  {\n    path: 'locate-doctors-gps',\n    loadChildren: () => import('./locate-doctors-gps/locate-doctors-gps.module').then( m => m.LocateDoctorsGPSPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SearchPagePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SearchPagePageRoutingModule } from './search-page-routing.module';\n\nimport { SearchPagePage } from './search-page.page';\nimport {SharedComponentsModule} from '../../../SharedComponents/shared-components.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        SearchPagePageRoutingModule,\n        SharedComponentsModule\n    ],\n  declarations: [SearchPagePage]\n})\nexport class SearchPagePageModule {}\n","export default \".container img {\\n  width: 200px;\\n  margin-top: 20%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvaG9tZS10YWJzL3NlYXJjaC1wYWdlL3NlYXJjaC1wYWdlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDRTtFQUNFLFlBQUE7RUFDQSxlQUFBO0FBQUoiLCJmaWxlIjoic3JjL2FwcC9QYWdlcy9ob21lLXRhYnMvc2VhcmNoLXBhZ2Uvc2VhcmNoLXBhZ2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGltZyB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIG1hcmdpbi10b3A6IDIwJTtcbiAgfVxufVxuIl19 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Geolocation} from '@ionic-native/geolocation/ngx';\nimport {NativeGeocoder, NativeGeocoderOptions} from '@ionic-native/native-geocoder/ngx';\nimport {SearchService} from '../../../Service/search.service';\nimport {IonSearchbar, ToastController} from '@ionic/angular';\nimport {IDoctorSearch} from '../../../Models/doctor-search';\nimport {FavoriteService} from '../../../Service/favorite.service';\n\n@Component({\n    selector: 'app-search-page',\n    templateUrl: './search-page.page.html',\n    styleUrls: ['./search-page.page.scss'],\n})\nexport class SearchPagePage implements OnInit {\n    locationResults;\n    @ViewChild('search', {static: false}) search: IonSearchbar;\n\n    constructor(private router: Router,\n                private geolocation: Geolocation,\n                public searchService: SearchService,\n                public toastController: ToastController,\n                private favoritesService: FavoriteService,\n                private nativeGeocoder: NativeGeocoder) {\n    }\n\n    ngOnInit() {\n        this.getLocationLogLat();\n        this.searchForDoctor();\n    }\n\n    ionViewDidEnter() {\n        // setTimeout(() => {\n        //     this.search.setFocus();\n        // });\n    }\n\n    getLocationLogLat() {\n        this.geolocation.getCurrentPosition().then((resp) => {\n            this.getLocation(resp.coords.latitude, resp.coords.longitude);\n        }).catch((error) => {\n            console.log('Error getting location', error);\n        });\n    }\n\n    getLocation(latitude, longitude) {\n        const options: NativeGeocoderOptions = {\n            useLocale: true,\n            maxResults: 1\n        };\n        this.nativeGeocoder.reverseGeocode(latitude, longitude, options).then((result) => {\n            this.locationResults = result[0].locality;\n        });\n    }\n\n    searchForDoctor() {\n        this.searchService.postSearchQuery();\n    }\n\n    searchDoctorSpec(event) {\n        const val = event.target.value;\n        this.searchService.searchDoctors = this.searchService.doctors;\n        console.log(this.searchService.searchDoctors)\n        if (val && val.trim() !== '') {\n            this.searchService.searchDoctors = this.searchService.doctors.filter((item: any) => {\n                return (item.name.toLowerCase().indexOf(val.toLowerCase()) > -1);\n            });\n        }\n        console.log(this.searchService.searchDoctors)\n    }\n\n    goToSearchByDoctorName() {\n        this.router.navigate(['home-page-tabs', 'search-page', 'search-by-doctor-name']);\n    }\n\n    goToSearchBySpecialtyAndArea() {\n        this.router.navigate(['home-page-tabs', 'search-page', 'search-by-specialty-and-area']);\n    }\n\n    goToFilterPage() {\n        this.router.navigate(['home-page-tabs', 'search-page', 'filter-doctors']);\n    }\n\n    goToFilterLocationGPSPage() {\n        this.router.navigate(['home-page-tabs', 'search-page', 'locate-doctors-gps']);\n    }\n\n    onFavoriteDoctor(doctor: any) {\n        this.favoritesService.postDoctorAsFavorite(doctor.doctorId).subscribe((res: { result }) => {\n        }, error => {\n        }, async () => {\n            const toast = await this.toastController.create({\n                message: `Doctor ${doctor.name} Has Been Added To Favorite`,\n                position: 'top',\n                duration: 2000\n            });\n            await toast.present();\n            this.searchService.postSearchQuery();\n\n        });\n    }\n\n    onRemoveFavoriteDoctor(doctor: any) {\n        this.favoritesService.removeDoctorAsFavorite(doctor.doctorId).subscribe((res: { result }) => {\n            console.log(res.result);\n        }, error => {\n        }, async () => {\n            const toast = await this.toastController.create({\n                message: `Doctor ${doctor.name} Has Been Removed From Favorite`,\n                position: 'top',\n                duration: 2000\n            });\n            await toast.present();\n            this.searchService.postSearchQuery();\n        });\n    }\n\n}\n"]}