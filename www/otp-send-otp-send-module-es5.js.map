{"version":3,"sources":["webpack:///src/app/Pages/doctor/doctor-booking-date/doctor-booking-date-confirm/otp-send/otp-send.page.html","webpack:///src/app/Pages/doctor/doctor-booking-date/doctor-booking-date-confirm/otp-send/otp-send-routing.module.ts","webpack:///src/app/Pages/doctor/doctor-booking-date/doctor-booking-date-confirm/otp-send/otp-send.module.ts","webpack:///src/app/Pages/doctor/doctor-booking-date/doctor-booking-date-confirm/otp-send/otp-send.page.scss","webpack:///src/app/Pages/doctor/doctor-booking-date/doctor-booking-date-confirm/otp-send/otp-send.page.ts","webpack:///src/app/Service/otp.service.ts"],"names":["routes","path","component","OtpSendPageRoutingModule","imports","forChild","exports","OtpSendPageModule","declarations","OtpSendPage","router","otpService","poweredBy","otpRequest","data","doctorData","getCurrentNavigation","extras","state","selectedSlot","selectedSlotLine","appointmentId","firstName","lastName","email","mobile","localStorage","getItem","sendOTPRequest","subscribe","res","result","healthpay_uid","otpForm","otp","confirmOTP","console","log","getPoweredBy","status","healthpay","getPartnerDetails","partner","getParnterDetails","selector","template","OtpService","dataService","post","params","uid","providedIn"],"mappings":"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","file":"otp-send-otp-send-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref='/home-page-tabs/home-page'></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Verify Reservation</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div class=\\\"verify\\\" *ngIf=\\\"otpRequest\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">First Name</ion-label>\\n      <ion-input [(ngModel)]=\\\"data.firstName\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Last Name</ion-label>\\n      <ion-input [(ngModel)]=\\\"data.lastName\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Email</ion-label>\\n      <ion-input [(ngModel)]=\\\"data.email\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Health Pay (Mobile)</ion-label>\\n      <ion-input [(ngModel)]=\\\"data.mobile\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Powered By</ion-label>\\n      <ion-select [(ngModel)]=\\\"data.poweredBy\\\">\\n        <ion-select-option *ngFor=\\\"let item of poweredBy\\\" [value]=\\\"item.id\\\">\\n          {{item.name}}\\n        </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-button color=\\\"success\\\" expand=\\\"block\\\" (click)=\\\"send_otp()\\\">Request OTP</ion-button>\\n  </div>\\n  <div class=\\\"verify\\\" *ngIf=\\\"otpForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Otp</ion-label>\\n      <ion-input [(ngModel)]=\\\"otp\\\"></ion-input>\\n    </ion-item>\\n    <ion-button color=\\\"success\\\" (click)=\\\"confirm_otp()\\\">Confirm OTP</ion-button>\\n  </div>\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OtpSendPage } from './otp-send.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OtpSendPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OtpSendPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OtpSendPageRoutingModule } from './otp-send-routing.module';\n\nimport { OtpSendPage } from './otp-send.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OtpSendPageRoutingModule\n  ],\n  declarations: [OtpSendPage]\n})\nexport class OtpSendPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL2RvY3Rvci9kb2N0b3ItYm9va2luZy1kYXRlL2RvY3Rvci1ib29raW5nLWRhdGUtY29uZmlybS9vdHAtc2VuZC9vdHAtc2VuZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IDoctorSearch } from 'src/app/Models/doctor-search';\nimport { OtpService } from 'src/app/Service/otp.service';\n\n@Component({\n  selector: 'app-otp-send',\n  templateUrl: './otp-send.page.html',\n  styleUrls: ['./otp-send.page.scss'],\n})\nexport class OtpSendPage implements OnInit {\n\n  \n  doctorData: IDoctorSearch;\n  poweredBy: any = [];\n  otpForm: Boolean;\n  otpRequest: Boolean = true;\n  otp: any;\n  partner: any;\n  selectedSlot;\n  selectedSlotLine;\n  appointmentId;\n  data: any = {\n    'firstName': '',\n    'lastName': '',\n    'mobile': '',\n    'poweredBy': '',\n    'email': ''\n  }\n  constructor(private router: Router, private otpService: OtpService) {\n      this.doctorData = this.router.getCurrentNavigation().extras.state.doctorData;\n      this.selectedSlot = this.router.getCurrentNavigation().extras.state.selectedSlot;\n      this.selectedSlotLine = this.router.getCurrentNavigation().extras.state.selectedSlotLine;\n      this.appointmentId = this.router.getCurrentNavigation().extras.state.appointmentId;\n  }\n  send_otp(){\n    let data = {\n      'healthpay_id': this.data.poweredBy,\n      'firstname': this.data.firstName,\n      'lastname': this.data.lastName,\n      'email': this.data.email,\n      'mobile': this.data.mobile,\n      'uid': localStorage.getItem('uid'),\n    }\n    this.otpService.sendOTPRequest(data).subscribe((res: any) => {\n      if(res.result.healthpay_uid){\n        this.otpForm = true;\n        this.otpRequest = false;\n      }\n    })\n  }\n  confirm_otp(){\n    let data = {\n      'healthpay_id': this.data.poweredBy,\n      'mobile': this.data.mobile,\n      'otp': this.otp\n    }\n    this.otpService.confirmOTP(data).subscribe((res: any) => {\n      console.log(res)\n    }) \n  }\n  getPoweredBy(){\n    this.otpService.getPoweredBy().subscribe((res: any) => {\n      console.log(res);\n      if(res.result.status == 'success'){\n        this.poweredBy = res.result.healthpay;\n      }\n    })\n  }\n  getParnterDetails(){\n    this.otpService.getPartnerDetails(localStorage.getItem('uid')).subscribe((res: any) => {\n      console.log(res);\n      if(res.result.status == 'success'){\n        this.partner = res.result.partner;\n        this.data.firstName = this.partner.firstName;\n        this.data.lastName = this.partner.lastName;\n        this.data.mobile = this.partner.mobile;\n        this.data.email = this.partner.email;\n      }\n    })\n  }\n  ngOnInit() {\n    this.getPoweredBy();\n    this.getParnterDetails();\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {DataService} from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OtpService {\n\n    constructor(private dataService: DataService) {\n    }\n    // TODO: Get Powered By List API\n    getPoweredBy() {\n        return this.dataService.post('api/get_powered_by_list', {params: {}});\n    }\n    // TODO: Get Partner Details API\n    getPartnerDetails(uid) {\n        return this.dataService.post('api/get_partner_details/'+uid, {params: {}});\n    }\n\n    // TODO: Send OTP Request API\n    sendOTPRequest(data) {\n        return this.dataService.post('api/healthpay_login_user', {params: data});\n    }\n\n    // TODO: Confirm OTP\n    confirmOTP(data) {\n        return this.dataService.post('api/healthpay_auth_user', {params: data});\n    }\n}\n"]}