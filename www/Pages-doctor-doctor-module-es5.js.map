{"version":3,"sources":["webpack:///src/app/Pages/doctor/doctor.page.html","webpack:///src/app/Pages/doctor/doctor-routing.module.ts","webpack:///src/app/Pages/doctor/doctor.module.ts","webpack:///src/app/Pages/doctor/doctor.page.scss","webpack:///src/app/Pages/doctor/doctor.page.ts","webpack:///src/app/Service/doctor.service.ts"],"names":["routes","path","component","loadChildren","then","m","DoctorBookingDatePageModule","DoctorPageRoutingModule","imports","forChild","exports","DoctorPageModule","declarations","DoctorPage","router","doctorService","slideOptions","grabCursor","cubeEffect","shadow","slideShadows","shadowOffset","shadowScale","slots","doctorData","getCurrentNavigation","extras","state","getDoctorSlots","doctor","id","console","log","getSlots","subscribe","res","result","slots_data","navigate","slotData","selector","template","DoctorService","dataService","post","params","doctor_id","slot_id","doctorId","slotLineId","data","uid","localStorage","getItem","toString","slot_line_id","providedIn"],"mappings":"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","file":"Pages-doctor-doctor-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref='/home-page-tabs/home-page'></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>{{doctorData.name}} Profile</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding\\\">\\n        <ion-card class=\\\"ion-text-center\\\">\\n            <br>\\n            <img style=\\\"border-radius: 50%; height: 100px; width: 100px\\\"\\n                 [src]=\\\"'data:image/png;base64,' + doctorData.image_1920\\\" [alt]=\\\"doctorData.name\\\"/>\\n            <ion-card-header>\\n                <ion-card-subtitle color=\\\"success\\\">{{doctorData.name}}</ion-card-subtitle>\\n                <ion-card-subtitle color=\\\"dark\\\">{{doctorData.specialty[1]}}</ion-card-subtitle>\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n                            <ionic-rating-component #rating\\n                                                    activeIcon=\\\"star\\\"\\n                                                    defaultIcon=\\\"star-outline\\\"\\n                                                    activeColor=\\\"#e0bb2e\\\"\\n                                                    defaultColor=\\\"#aaaaaa\\\"\\n                                                    readonly=\\\"true\\\"\\n                                                    rating=\\\"{{doctorData.rate_overall}}\\\"\\n                                                    fontSize=\\\"15px\\\"\\n                            >\\n                            </ionic-rating-component>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-card-header>\\n            <ion-card-content>\\n                ({{doctorData.count_rate}} Rating From Visitors)\\n            </ion-card-content>\\n        </ion-card>\\n        <ion-card>\\n            <ion-card-content>\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-icon name=\\\"cash-outline\\\" color=\\\"success\\\"></ion-icon>\\n                            Fees\\n                            <ion-text color=\\\"success\\\">({{doctorData.consul_fee}})</ion-text>\\n                        </ion-col>\\n                        <ion-col>\\n                            <ion-icon name=\\\"time-outline\\\" color=\\\"success\\\"></ion-icon>\\n                            W.T.\\n                            <ion-text color=\\\"success\\\">15 Min.</ion-text>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-card-content>\\n        </ion-card>\\n\\n        <ion-slides [options]=\\\"slideOptions\\\" *ngIf=\\\"slots\\\">\\n            <ion-slide *ngFor=\\\"let slot of slots\\\">\\n\\n                <ion-card style=\\\"width: 100%\\\">\\n                    <ion-card-header>\\n                        <ion-grid>\\n                            <ion-row>\\n                                <ion-col size=\\\"12\\\">\\n                                    <ion-card-title>{{slot.slot[0].display_name | date: 'EEEE, MMMM d, y'}}</ion-card-title>\\n                                    <!--                                    <ion-card-subtitle>{{slots.length()}} Slots Available</ion-card-subtitle>-->\\n                                </ion-col>\\n\\n                                <!--                                <ion-col>-->\\n                                <!--                                    <ion-button size=\\\"small\\\" color=\\\"success\\\">See All</ion-button>-->\\n                                <!--                                </ion-col>-->\\n                            </ion-row>\\n                        </ion-grid>\\n\\n                    </ion-card-header>\\n\\n                    <!--                    <ion-card-content>-->\\n                    <!--                        <ion-grid>-->\\n                    <!--                            <ion-row>-->\\n                    <!--                                <ion-col size=\\\"4\\\">-->\\n                    <!--                                    <ion-note>08:00 AM</ion-note>-->\\n                    <!--                                </ion-col>-->\\n                    <!--                                <ion-col size=\\\"4\\\">-->\\n                    <!--                                    <ion-note>08:00 AM</ion-note>-->\\n                    <!--                                </ion-col>-->\\n                    <!--                                <ion-col size=\\\"4\\\">-->\\n                    <!--                                    <ion-note>08:00 AM</ion-note>-->\\n                    <!--                                </ion-col>-->\\n                    <!--                            </ion-row>-->\\n                    <!--                        </ion-grid>-->\\n                    <!--                    </ion-card-content>-->\\n                </ion-card>\\n            </ion-slide>\\n        </ion-slides>\\n\\n        <ion-button expand=\\\"block\\\" *ngIf=\\\"slots.length >= 1\\\" color=\\\"success\\\" class=\\\"stick-bottom\\\" (click)=\\\"onBooking()\\\">\\n            Book An Appointment\\n        </ion-button>\\n\\n        <ion-card *ngIf=\\\"slots.length === 0\\\" class=\\\"ion-text-center\\\">\\n            <ion-card-header>\\n                <ion-card-subtitle>Sorry</ion-card-subtitle>\\n                <ion-card-title>No Slots Available For {{doctorData.name}}</ion-card-title>\\n            </ion-card-header>\\n        </ion-card>\\n    </div>\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DoctorPage } from './doctor.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DoctorPage\n  },\n  {\n    path: 'doctor-booking-date',\n    loadChildren: () => import('./doctor-booking-date/doctor-booking-date.module').then( m => m.DoctorBookingDatePageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoctorPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DoctorPageRoutingModule } from './doctor-routing.module';\n\nimport { DoctorPage } from './doctor.page';\nimport {IonicRatingComponentModule} from 'ionic-rating-component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        DoctorPageRoutingModule,\n        IonicRatingComponentModule\n    ],\n  declarations: [DoctorPage]\n})\nexport class DoctorPageModule {}\n","export default \".stick-bottom {\\n  position: fixed;\\n  left: 10px;\\n  right: 10px;\\n  width: 93%;\\n  z-index: 20;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvZG9jdG9yL2RvY3Rvci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvUGFnZXMvZG9jdG9yL2RvY3Rvci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3RpY2stYm90dG9tIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiAxMHB4O1xuICByaWdodDogMTBweDtcbiAgd2lkdGg6IDkzJTtcbiAgei1pbmRleDogMjA7XG59XG4iXX0= */\";","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {IDoctorSearch} from '../../Models/doctor-search';\nimport {DoctorService} from '../../Service/doctor.service';\n\n@Component({\n    selector: 'app-doctor',\n    templateUrl: './doctor.page.html',\n    styleUrls: ['./doctor.page.scss'],\n})\nexport class DoctorPage implements OnInit {\n    slideOptions = {\n        grabCursor: true,\n        cubeEffect: {\n            shadow: true,\n            slideShadows: true,\n            shadowOffset: 20,\n            shadowScale: 0.94,\n        }\n    };\n    doctorData: IDoctorSearch;\n    slots: [] = [];\n\n    constructor(private router: Router, private doctorService: DoctorService) {\n        this.doctorData = this.router.getCurrentNavigation().extras.state.doctorData;\n    }\n\n    ngOnInit() {\n        this.getDoctorSlots();\n    }\n\n    getDoctorSlots() {\n        let doctor = this.doctorData.id ? this.doctorData.id : this.doctorData['doctorId'];\n        console.log(doctor);\n        this.doctorService.getSlots(doctor).subscribe((res: { result }) => {\n            this.slots = res.result.slots_data;\n        });\n    }\n\n    onBooking() {\n        this.router.navigate(['/doctor/doctor-booking-date'], {\n            state: {\n                doctorData: this.doctorData,\n                slotData: this.slots\n            }\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {DataService} from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DoctorService {\n\n    constructor(private dataService: DataService) {\n    }\n\n    getSlots(id: number) {\n        return this.dataService.post('api/doctor_slots', {params: {doctor_id: id}});\n    }\n\n    getSlotLines(id: number) {\n        return this.dataService.post('api/get_slot_lines', {params: {slot_id: id}});\n    }\n\n    confirmAppointment(doctorId: number, slotLineId: number) {\n        const data = {\n            uid: localStorage.getItem('uid').toString(),\n            doctor_id: doctorId.toString(),\n            slot_line_id: slotLineId.toString()\n        };\n\n        return this.dataService.post('api/doctor_reservation', {\n            params: data\n        });\n    }\n}\n"]}