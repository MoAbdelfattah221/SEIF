{"version":3,"sources":["./src/app/Pages/home-tabs/search-page/filter-doctors/filter-doctors.page.html","./src/app/Pages/home-tabs/search-page/filter-doctors/filter-doctors-routing.module.ts","./src/app/Pages/home-tabs/search-page/filter-doctors/filter-doctors.module.ts","./src/app/Pages/home-tabs/search-page/filter-doctors/filter-doctors.page.scss","./src/app/Pages/home-tabs/search-page/filter-doctors/filter-doctors.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,s0FAAuwF,kBAAkB,2hBAA2hB,sBAAsB,4YAA4Y,oBAAoB,u2BAAu2B,kBAAkB,oFAAoF,kBAAkB,40FAA40F,E;;;;;;;;;;;;;;;;;;;ACA3/O;AACc;AAEG;AAE1D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAiB;KAC7B;CACF,CAAC;IAMW,8BAA8B,SAA9B,8BAA8B;CAAG;AAAjC,8BAA8B;IAJ1C,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,8BAA8B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AChBF;AACM;AACF;AAEA;AAEoC;AAEvB;AACQ;IAYrD,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IAVnC,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,6FAA8B;YAC9B,iFAA0B;SAC7B;QACH,YAAY,EAAE,CAAC,sEAAiB,CAAC;KAClC,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;ACrBpC;AAAe,6GAA8C,mMAAmM,E;;;;;;;;;;;;;;;;;;;;;ACAhN;AACT;AACM;AAE4D;AAGxC;IAQpD,iBAAiB,SAAjB,iBAAiB;IAQ1B,YAAoB,MAAc,EAAU,OAAsB,EAC/C,aAA4B,EAC3B,gCAAiE;QAFjE,WAAM,GAAN,MAAM,CAAQ;QAAU,YAAO,GAAP,OAAO,CAAe;QAC/C,kBAAa,GAAb,aAAa,CAAe;QAC3B,qCAAgC,GAAhC,gCAAgC,CAAiC;QATrF,eAAU,GAAG,EAAC,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAC,CAAC;QACpC,YAAO,GAAW,QAAQ,CAAC;IAS3B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,KAAK;QAChB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,cAAc;QACV,mEAAmE;QACnE,mEAAmE;QACnE,qDAAqD;QACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAC5C,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,uBAAuB;QACnB,IAAI,CAAC,gCAAgC,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,CAAC,GAAe,EAAE,EAAE;YACjF,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,MAAM,CAAC;QACxC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACX,IAAI,CAAC,gCAAgC,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,CAAC,GAAe,EAAE,EAAE;YAClF,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,MAAM,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,SAAS,CAAC,EAAU;QAChB,IAAI,CAAC,gCAAgC,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAe,EAAE,EAAE;YACvF,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,GAAI,EAAkB,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;IACzC,CAAC;CACJ;;YAnEO,sDAAM;YACN,4DAAa;YAKb,qEAAa;YAHb,6GAA+B;;AAW1B,iBAAiB;IAL7B,+DAAS,CAAC;QACP,QAAQ,EAAE,oBAAoB;QAC9B,wQAAyC;;KAE5C,CAAC;GACW,iBAAiB,CAqD7B;AArD6B","file":"filter-doctors-filter-doctors-module-es2015.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref='/home-page-tabs/home-page'></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Filter</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n    <ion-segment [(ngModel)]=\\\"segment\\\" color=\\\"success\\\">\\n        <ion-segment-button value=\\\"filter\\\">\\n            Filter\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"sort\\\">\\n            Sort\\n        </ion-segment-button>\\n    </ion-segment>\\n\\n    <form (submit)=\\\"onSubmitFilter()\\\">\\n        <div [ngSwitch]=\\\"segment\\\">\\n            <ion-card *ngSwitchCase=\\\"'filter'\\\" class=\\\"animate__animated animate__fadeIn\\\">\\n                <ion-card-content>\\n                    <ion-item>\\n                        <ion-label>Availability</ion-label>\\n                        <ion-select [(ngModel)]=\\\"searchService.searchQuery.availability\\\" name=\\\"availability\\\">\\n                            <ion-select-option [value]=\\\"'Any Day'\\\">Any Day</ion-select-option>\\n                            <ion-select-option [value]=\\\"'Today'\\\">Today</ion-select-option>\\n                            <ion-select-option [value]=\\\"'Tomorrow'\\\">Tomorrow</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <!--                    <ion-item>-->\\n                    <!--                        <ion-label>Title</ion-label>-->\\n                    <!--                        <ion-select>-->\\n                    <!--                            <ion-select-option [value]=\\\"'Professional'\\\">Professional</ion-select-option>-->\\n                    <!--                            <ion-select-option [value]=\\\"'Specialist'\\\">Specialist</ion-select-option>-->\\n                    <!--                        </ion-select>-->\\n                    <!--                    </ion-item>-->\\n                    <!--                    <hr>-->\\n                    <ion-item>\\n                        <ion-label>Gender</ion-label>\\n                        <ion-select [(ngModel)]=\\\"searchService.searchQuery.gender\\\" name=\\\"gender\\\">\\n                            <ion-select-option [value]=\\\"'male'\\\">Male</ion-select-option>\\n                            <ion-select-option [value]=\\\"'female'\\\">Female</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label>Specialties</ion-label>\\n                        <ion-select [(ngModel)]=\\\"searchService.searchQuery.specialty\\\" name=\\\"specialty\\\">\\n                            <ion-select-option *ngFor=\\\"let sep of doctorSpecialties\\\" [value]=\\\"sep.id\\\">\\n                                {{sep.display_name}}\\n                            </ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label>State</ion-label>\\n                        <ion-select [(ngModel)]=\\\"searchService.searchQuery.state_id\\\" name=\\\"state_id\\\"\\n                            (ionChange)=\\\"getPlaces($event.target.value)\\\">\\n                            <ion-select-option *ngFor=\\\"let country of countryStates\\\" [value]=\\\"country.id\\\">\\n                                {{country.display_name}}</ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <ion-item>\\n\\n                        <ion-label>Area</ion-label>\\n                        <ion-select [(ngModel)]=\\\"searchService.searchQuery.city_id\\\" name=\\\"city_id\\\" multiple>\\n                            <ion-select-option *ngFor=\\\"let place of places\\\" [value]=\\\"place.id\\\">{{place.display_name}}\\n                            </ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <div class=\\\"ion-text-center\\\">\\n                        <ion-label>Rating</ion-label>\\n                        <ionic-rating-component #rating activeIcon=\\\"star\\\" defaultIcon=\\\"star-outline\\\"\\n                            activeColor=\\\"#006600\\\" defaultColor=\\\"#aaaaaa\\\" readonly=\\\"false\\\" rating=\\\"0\\\" fontSize=\\\"32px\\\"\\n                            (ratingChanged)=\\\"onRatingChange($event)\\\">\\n                        </ionic-rating-component>\\n                    </div>\\n                    <div class=\\\"ion-text-center\\\">\\n                        <ion-label class=\\\"ion-text-center\\\">Examination Fees</ion-label>\\n                        <ion-item>\\n                            <ion-note color=\\\"success\\\" slot=\\\"start\\\">{{rangeValue.lower}}</ion-note>\\n                            <ion-note color=\\\"success\\\" slot=\\\"end\\\">{{rangeValue.upper}}</ion-note>\\n                            <ion-range id=\\\"dual-range\\\" dual-knobs pin color=\\\"dark\\\" min=\\\"5\\\" max=\\\"1000\\\" name=\\\"rangeValue\\\"\\n                                [(ngModel)]=\\\"rangeValue\\\">\\n                            </ion-range>\\n                        </ion-item>\\n                    </div>\\n\\n                    <div class=\\\"ion-padding\\\">\\n                        <ion-button expand=\\\"block\\\" type=\\\"submit\\\" color=\\\"success\\\" routerDirection=“back”>\\n                            <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n                            Submit\\n                        </ion-button>\\n                        <br>\\n                        <ion-button expand=\\\"block\\\" type=\\\"button\\\" fill=\\\"outline\\\" color=\\\"dark\\\" (click)=\\\"resetFunction()\\\">\\n                            <ion-icon name=\\\"refresh-outline\\\"></ion-icon>\\n                            Reset\\n                        </ion-button>\\n                    </div>\\n                </ion-card-content>\\n            </ion-card>\\n\\n            <ion-card *ngSwitchCase=\\\"'sort'\\\" class=\\\"animate__animated animate__fadeIn\\\">\\n                <ion-list>\\n                    <ion-radio-group value=\\\"Recommended\\\">\\n                        <ion-item>\\n                            <ion-label>Recommended</ion-label>\\n                            <ion-radio slot=\\\"start\\\" value=\\\"Recommended\\\"></ion-radio>\\n                        </ion-item>\\n\\n                        <ion-item>\\n                            <ion-label>Price Low To High</ion-label>\\n                            <ion-radio slot=\\\"start\\\" value=\\\"Price Low To High\\\"></ion-radio>\\n                        </ion-item>\\n\\n                        <ion-item>\\n                            <ion-label>Price High To Low</ion-label>\\n                            <ion-radio slot=\\\"start\\\" value=\\\"Price High To Low\\\"></ion-radio>\\n                        </ion-item>\\n\\n                        <ion-item>\\n                            <ion-label>Top Rating</ion-label>\\n                            <ion-radio slot=\\\"start\\\" value=\\\"Top Rating\\\"></ion-radio>\\n                        </ion-item>\\n                    </ion-radio-group>\\n                </ion-list>\\n                <div class=\\\"ion-padding\\\">\\n                    <ion-button expand=\\\"block\\\" type=\\\"submit\\\" color=\\\"success\\\" routerDirection=“back”>\\n                        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n                        Submit\\n                    </ion-button>\\n                    <br>\\n                    <ion-button expand=\\\"block\\\" type=\\\"button\\\" fill=\\\"outline\\\" color=\\\"dark\\\" (click)=\\\"resetFunction()\\\">\\n                        <ion-icon name=\\\"refresh-outline\\\"></ion-icon>\\n                        Reset\\n                    </ion-button>\\n                </div>\\n            </ion-card>\\n        </div>\\n    </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FilterDoctorsPage } from './filter-doctors.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FilterDoctorsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FilterDoctorsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FilterDoctorsPageRoutingModule } from './filter-doctors-routing.module';\n\nimport { FilterDoctorsPage } from './filter-doctors.page';\nimport {IonicRatingComponentModule} from 'ionic-rating-component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        FilterDoctorsPageRoutingModule,\n        IonicRatingComponentModule\n    ],\n  declarations: [FilterDoctorsPage]\n})\nexport class FilterDoctorsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL2hvbWUtdGFicy9zZWFyY2gtcGFnZS9maWx0ZXItZG9jdG9ycy9maWx0ZXItZG9jdG9ycy5wYWdlLnNjc3MifQ== */\";","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NavController} from '@ionic/angular';\nimport {IDoctorSpecialty} from '../../../../Models/doctor-specialty';\nimport {SearchBySpecialtyAndAreaService} from '../../../../Service/search-by-specialty-and-area.service';\nimport {IDoctorCountryState} from '../../../../Models/doctor-country-state';\nimport {IDoctorCityStateCountry} from '../../../../Models/doctor-city-state-country';\nimport {SearchService} from '../../../../Service/search.service';\nimport {ISearchQuery} from '../../../../Models/search-query';\n\n@Component({\n    selector: 'app-filter-doctors',\n    templateUrl: './filter-doctors.page.html',\n    styleUrls: ['./filter-doctors.page.scss'],\n})\nexport class FilterDoctorsPage implements OnInit {\n    rangeValue = {lower: 0, upper: 500};\n    segment: string = 'filter';\n    rate;\n    doctorSpecialties: IDoctorSpecialty[];\n    countryStates: IDoctorCountryState[];\n    places: IDoctorCityStateCountry[];\n\n    constructor(private router: Router, private navCtrl: NavController,\n                public searchService: SearchService,\n                private searchBySpecialityAndAreaService: SearchBySpecialtyAndAreaService) {\n    }\n\n    ngOnInit() {\n        this.getAllDoctorSpecialties();\n        this.getAllCountries();\n    }\n\n    onRatingChange(event) {\n        this.rate = event;\n    }\n\n    onSubmitFilter() {\n        // this.searchService.searchQuery.min_fees = this.rangeValue.lower;\n        // this.searchService.searchQuery.max_fees = this.rangeValue.upper;\n        // this.searchService.searchQuery.rating = this.rate;\n        console.log(this.searchService.searchQuery);\n        this.searchService.postSearchQuery();\n        this.navCtrl.back();\n    }\n\n    getAllDoctorSpecialties() {\n        this.searchBySpecialityAndAreaService.getSpecialties().subscribe((res: { result }) => {\n            this.doctorSpecialties = res.result;\n        });\n    }\n\n    getAllCountries() {\n        this.searchBySpecialityAndAreaService.getAllCountries().subscribe((res: { result }) => {\n            this.countryStates = res.result;\n        });\n    }\n\n    getPlaces(id: number) {\n        this.searchBySpecialityAndAreaService.getPlacesInCountry(id).subscribe((res: { result }) => {\n            this.places = res.result;\n        });\n    }\n\n    resetFunction() {\n        this.searchService.searchQuery  = {} as ISearchQuery;\n        this.searchService.postSearchQuery();\n    }\n}\n"],"sourceRoot":"webpack:///"}