{"version":3,"sources":["./src/app/Pages/doctor/doctor-booking-date/doctor-booking-date-confirm/otp-send/otp-send.page.html","./src/app/Pages/doctor/doctor-booking-date/doctor-booking-date-confirm/otp-send/otp-send-routing.module.ts","./src/app/Pages/doctor/doctor-booking-date/doctor-booking-date-confirm/otp-send/otp-send.module.ts","./src/app/Pages/doctor/doctor-booking-date/doctor-booking-date-confirm/otp-send/otp-send.page.scss","./src/app/Pages/doctor/doctor-booking-date/doctor-booking-date-confirm/otp-send/otp-send.page.ts","./src/app/Service/otp.service.ts"],"names":[],"mappings":"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","file":"otp-send-otp-send-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button defaultHref='/home-page-tabs/home-page'></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Verify Reservation</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <div class=\\\"verify\\\" *ngIf=\\\"otpRequest\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">First Name</ion-label>\\n      <ion-input [(ngModel)]=\\\"data.firstName\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Last Name</ion-label>\\n      <ion-input [(ngModel)]=\\\"data.lastName\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Email</ion-label>\\n      <ion-input [(ngModel)]=\\\"data.email\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Health Pay (Mobile)</ion-label>\\n      <ion-input [(ngModel)]=\\\"data.mobile\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Powered By</ion-label>\\n      <ion-select [(ngModel)]=\\\"data.poweredBy\\\">\\n        <ion-select-option *ngFor=\\\"let item of poweredBy\\\" [value]=\\\"item.id\\\">\\n          {{item.name}}\\n        </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-button color=\\\"success\\\" expand=\\\"block\\\" (click)=\\\"send_otp()\\\">Request OTP</ion-button>\\n  </div>\\n  <div class=\\\"verify\\\" *ngIf=\\\"otpForm\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Otp</ion-label>\\n      <ion-input [(ngModel)]=\\\"otp\\\"></ion-input>\\n    </ion-item>\\n    <ion-button color=\\\"success\\\" (click)=\\\"confirm_otp()\\\">Confirm OTP</ion-button>\\n  </div>\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OtpSendPage } from './otp-send.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OtpSendPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OtpSendPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OtpSendPageRoutingModule } from './otp-send-routing.module';\n\nimport { OtpSendPage } from './otp-send.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OtpSendPageRoutingModule\n  ],\n  declarations: [OtpSendPage]\n})\nexport class OtpSendPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL1BhZ2VzL2RvY3Rvci9kb2N0b3ItYm9va2luZy1kYXRlL2RvY3Rvci1ib29raW5nLWRhdGUtY29uZmlybS9vdHAtc2VuZC9vdHAtc2VuZC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { IDoctorSearch } from 'src/app/Models/doctor-search';\nimport { OtpService } from 'src/app/Service/otp.service';\n\n@Component({\n  selector: 'app-otp-send',\n  templateUrl: './otp-send.page.html',\n  styleUrls: ['./otp-send.page.scss'],\n})\nexport class OtpSendPage implements OnInit {\n\n  \n  doctorData: IDoctorSearch;\n  poweredBy: any = [];\n  otpForm: Boolean;\n  otpRequest: Boolean = true;\n  otp: any;\n  partner: any;\n  selectedSlot;\n  selectedSlotLine;\n  appointmentId;\n  data: any = {\n    'firstName': '',\n    'lastName': '',\n    'mobile': '',\n    'poweredBy': '',\n    'email': ''\n  }\n  constructor(private router: Router, private otpService: OtpService) {\n      this.doctorData = this.router.getCurrentNavigation().extras.state.doctorData;\n      this.selectedSlot = this.router.getCurrentNavigation().extras.state.selectedSlot;\n      this.selectedSlotLine = this.router.getCurrentNavigation().extras.state.selectedSlotLine;\n      this.appointmentId = this.router.getCurrentNavigation().extras.state.appointmentId;\n  }\n  send_otp(){\n    let data = {\n      'healthpay_id': this.data.poweredBy,\n      'firstname': this.data.firstName,\n      'lastname': this.data.lastName,\n      'email': this.data.email,\n      'mobile': this.data.mobile,\n      'uid': localStorage.getItem('uid'),\n    }\n    this.otpService.sendOTPRequest(data).subscribe((res: any) => {\n      if(res.result.healthpay_uid){\n        this.otpForm = true;\n        this.otpRequest = false;\n      }\n    })\n  }\n  confirm_otp(){\n    let data = {\n      'healthpay_id': this.data.poweredBy,\n      'mobile': this.data.mobile,\n      'otp': this.otp\n    }\n    this.otpService.confirmOTP(data).subscribe((res: any) => {\n      console.log(res)\n    }) \n  }\n  getPoweredBy(){\n    this.otpService.getPoweredBy().subscribe((res: any) => {\n      console.log(res);\n      if(res.result.status == 'success'){\n        this.poweredBy = res.result.healthpay;\n      }\n    })\n  }\n  getParnterDetails(){\n    this.otpService.getPartnerDetails(localStorage.getItem('uid')).subscribe((res: any) => {\n      console.log(res);\n      if(res.result.status == 'success'){\n        this.partner = res.result.partner;\n        this.data.firstName = this.partner.firstName;\n        this.data.lastName = this.partner.lastName;\n        this.data.mobile = this.partner.mobile;\n        this.data.email = this.partner.email;\n      }\n    })\n  }\n  ngOnInit() {\n    this.getPoweredBy();\n    this.getParnterDetails();\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {DataService} from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OtpService {\n\n    constructor(private dataService: DataService) {\n    }\n    // TODO: Get Powered By List API\n    getPoweredBy() {\n        return this.dataService.post('api/get_powered_by_list', {params: {}});\n    }\n    // TODO: Get Partner Details API\n    getPartnerDetails(uid) {\n        return this.dataService.post('api/get_partner_details/'+uid, {params: {}});\n    }\n\n    // TODO: Send OTP Request API\n    sendOTPRequest(data) {\n        return this.dataService.post('api/healthpay_login_user', {params: data});\n    }\n\n    // TODO: Confirm OTP\n    confirmOTP(data) {\n        return this.dataService.post('api/healthpay_auth_user', {params: data});\n    }\n}\n"],"sourceRoot":"webpack:///"}