{"version":3,"sources":["./src/app/Pages/doctor/doctor.page.html","./src/app/Pages/doctor/doctor-routing.module.ts","./src/app/Pages/doctor/doctor.module.ts","./src/app/Pages/doctor/doctor.page.scss","./src/app/Pages/doctor/doctor.page.ts","./src/app/Service/doctor.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,qSAAsO,iBAAiB,uNAAuN,eAAe,0DAA0D,sJAAsJ,iBAAiB,0EAA0E,yBAAyB,mpBAAmpB,yBAAyB,qVAAqV,uBAAuB,wZAAwZ,uBAAuB,i0BAAi0B,qDAAqD,oHAAoH,gBAAgB,+lEAA+lE,iBAAiB,yGAAyG,E;;;;;;;;;;;;;;;;;;;ACAj6K;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;IACD;QACE,IAAI,EAAE,qBAAqB;QAC3B,YAAY,EAAE,GAAG,EAAE,CAAC,iTAA0D,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,2BAA2B,CAAC;KACzH;CACF,CAAC;IAMW,uBAAuB,SAAvB,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACpBK;AACM;AACF;AAEA;AAEqB;AAEvB;AACuB;IAYrD,gBAAgB,SAAhB,gBAAgB;CAAG;AAAnB,gBAAgB;IAV5B,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,8EAAuB;YACvB,iFAA0B;SAC7B;QACH,YAAY,EAAE,CAAC,uDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;ACrB7B;AAAe,+EAAgB,oBAAoB,eAAe,gBAAgB,eAAe,gBAAgB,GAAG,6CAA6C,ubAAub,E;;;;;;;;;;;;;;;;;;;ACAxiB;AACT;AAEoB;IAO9C,UAAU,SAAV,UAAU;IAanB,YAAoB,MAAc,EAAU,aAA4B;QAApD,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QAZxE,iBAAY,GAAG;YACX,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE;gBACR,MAAM,EAAE,IAAI;gBACZ,YAAY,EAAE,IAAI;gBAClB,YAAY,EAAE,EAAE;gBAChB,WAAW,EAAE,IAAI;aACpB;SACJ,CAAC;QAEF,UAAK,GAAO,EAAE,CAAC;QAGX,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC;IACjF,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,cAAc;QACV,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACnF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,GAAe,EAAE,EAAE;YAC9D,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,SAAS;QACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,6BAA6B,CAAC,EAAE;YAClD,KAAK,EAAE;gBACH,UAAU,EAAE,IAAI,CAAC,UAAU;gBAC3B,QAAQ,EAAE,IAAI,CAAC,KAAK;aACvB;SACJ,CAAC,CAAC;IACP,CAAC;CACJ;;YA9CO,sDAAM;YAEN,qEAAa;;AAOR,UAAU;IALtB,+DAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,0NAAiC;;KAEpC,CAAC;GACW,UAAU,CAqCtB;AArCsB;;;;;;;;;;;;;;;;;;;ACVkB;AACE;IAK9B,aAAa,SAAb,aAAa;IAEtB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,QAAQ,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAC,MAAM,EAAE,EAAC,SAAS,EAAE,EAAE,EAAC,EAAC,CAAC,CAAC;IAChF,CAAC;IAED,YAAY,CAAC,EAAU;QACnB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAC,MAAM,EAAE,EAAC,OAAO,EAAE,EAAE,EAAC,EAAC,CAAC,CAAC;IAChF,CAAC;IAED,kBAAkB,CAAC,QAAgB,EAAE,UAAkB;QACnD,MAAM,IAAI,GAAG;YACT,GAAG,EAAE,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;YAC3C,SAAS,EAAE,QAAQ,CAAC,QAAQ,EAAE;YAC9B,YAAY,EAAE,UAAU,CAAC,QAAQ,EAAE;SACtC,CAAC;QAEF,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,EAAE;YACnD,MAAM,EAAE,IAAI;SACf,CAAC,CAAC;IACP,CAAC;CACJ;;YA7BO,yDAAW;;AAKN,aAAa;IAHzB,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;GACW,aAAa,CAwBzB;AAxByB","file":"Pages-doctor-doctor-module-es2015.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref='/home-page-tabs/home-page'></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>{{doctorData.name}} Profile</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"ion-padding\\\">\\n        <ion-card class=\\\"ion-text-center\\\">\\n            <br>\\n            <img style=\\\"border-radius: 50%; height: 100px; width: 100px\\\"\\n                 [src]=\\\"'data:image/png;base64,' + doctorData.image_1920\\\" [alt]=\\\"doctorData.name\\\"/>\\n            <ion-card-header>\\n                <ion-card-subtitle color=\\\"success\\\">{{doctorData.name}}</ion-card-subtitle>\\n                <ion-card-subtitle color=\\\"dark\\\">{{doctorData.specialty[1]}}</ion-card-subtitle>\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n                            <ionic-rating-component #rating\\n                                                    activeIcon=\\\"star\\\"\\n                                                    defaultIcon=\\\"star-outline\\\"\\n                                                    activeColor=\\\"#e0bb2e\\\"\\n                                                    defaultColor=\\\"#aaaaaa\\\"\\n                                                    readonly=\\\"true\\\"\\n                                                    rating=\\\"{{doctorData.rate_overall}}\\\"\\n                                                    fontSize=\\\"15px\\\"\\n                            >\\n                            </ionic-rating-component>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-card-header>\\n            <ion-card-content>\\n                ({{doctorData.count_rate}} Rating From Visitors)\\n            </ion-card-content>\\n        </ion-card>\\n        <ion-card>\\n            <ion-card-content>\\n                <ion-grid>\\n                    <ion-row>\\n                        <ion-col>\\n                            <ion-icon name=\\\"cash-outline\\\" color=\\\"success\\\"></ion-icon>\\n                            Fees\\n                            <ion-text color=\\\"success\\\">({{doctorData.consul_fee}})</ion-text>\\n                        </ion-col>\\n                        <ion-col>\\n                            <ion-icon name=\\\"time-outline\\\" color=\\\"success\\\"></ion-icon>\\n                            W.T.\\n                            <ion-text color=\\\"success\\\">15 Min.</ion-text>\\n                        </ion-col>\\n                    </ion-row>\\n                </ion-grid>\\n            </ion-card-content>\\n        </ion-card>\\n\\n        <ion-slides [options]=\\\"slideOptions\\\" *ngIf=\\\"slots\\\">\\n            <ion-slide *ngFor=\\\"let slot of slots\\\">\\n\\n                <ion-card style=\\\"width: 100%\\\">\\n                    <ion-card-header>\\n                        <ion-grid>\\n                            <ion-row>\\n                                <ion-col size=\\\"12\\\">\\n                                    <ion-card-title>{{slot.slot[0].display_name | date: 'EEEE, MMMM d, y'}}</ion-card-title>\\n                                    <!--                                    <ion-card-subtitle>{{slots.length()}} Slots Available</ion-card-subtitle>-->\\n                                </ion-col>\\n\\n                                <!--                                <ion-col>-->\\n                                <!--                                    <ion-button size=\\\"small\\\" color=\\\"success\\\">See All</ion-button>-->\\n                                <!--                                </ion-col>-->\\n                            </ion-row>\\n                        </ion-grid>\\n\\n                    </ion-card-header>\\n\\n                    <!--                    <ion-card-content>-->\\n                    <!--                        <ion-grid>-->\\n                    <!--                            <ion-row>-->\\n                    <!--                                <ion-col size=\\\"4\\\">-->\\n                    <!--                                    <ion-note>08:00 AM</ion-note>-->\\n                    <!--                                </ion-col>-->\\n                    <!--                                <ion-col size=\\\"4\\\">-->\\n                    <!--                                    <ion-note>08:00 AM</ion-note>-->\\n                    <!--                                </ion-col>-->\\n                    <!--                                <ion-col size=\\\"4\\\">-->\\n                    <!--                                    <ion-note>08:00 AM</ion-note>-->\\n                    <!--                                </ion-col>-->\\n                    <!--                            </ion-row>-->\\n                    <!--                        </ion-grid>-->\\n                    <!--                    </ion-card-content>-->\\n                </ion-card>\\n            </ion-slide>\\n        </ion-slides>\\n\\n        <ion-button expand=\\\"block\\\" *ngIf=\\\"slots.length >= 1\\\" color=\\\"success\\\" class=\\\"stick-bottom\\\" (click)=\\\"onBooking()\\\">\\n            Book An Appointment\\n        </ion-button>\\n\\n        <ion-card *ngIf=\\\"slots.length === 0\\\" class=\\\"ion-text-center\\\">\\n            <ion-card-header>\\n                <ion-card-subtitle>Sorry</ion-card-subtitle>\\n                <ion-card-title>No Slots Available For {{doctorData.name}}</ion-card-title>\\n            </ion-card-header>\\n        </ion-card>\\n    </div>\\n\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DoctorPage } from './doctor.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DoctorPage\n  },\n  {\n    path: 'doctor-booking-date',\n    loadChildren: () => import('./doctor-booking-date/doctor-booking-date.module').then( m => m.DoctorBookingDatePageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoctorPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DoctorPageRoutingModule } from './doctor-routing.module';\n\nimport { DoctorPage } from './doctor.page';\nimport {IonicRatingComponentModule} from 'ionic-rating-component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        DoctorPageRoutingModule,\n        IonicRatingComponentModule\n    ],\n  declarations: [DoctorPage]\n})\nexport class DoctorPageModule {}\n","export default \".stick-bottom {\\n  position: fixed;\\n  left: 10px;\\n  right: 10px;\\n  width: 93%;\\n  z-index: 20;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUGFnZXMvZG9jdG9yL2RvY3Rvci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsV0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvUGFnZXMvZG9jdG9yL2RvY3Rvci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3RpY2stYm90dG9tIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBsZWZ0OiAxMHB4O1xuICByaWdodDogMTBweDtcbiAgd2lkdGg6IDkzJTtcbiAgei1pbmRleDogMjA7XG59XG4iXX0= */\";","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {IDoctorSearch} from '../../Models/doctor-search';\nimport {DoctorService} from '../../Service/doctor.service';\n\n@Component({\n    selector: 'app-doctor',\n    templateUrl: './doctor.page.html',\n    styleUrls: ['./doctor.page.scss'],\n})\nexport class DoctorPage implements OnInit {\n    slideOptions = {\n        grabCursor: true,\n        cubeEffect: {\n            shadow: true,\n            slideShadows: true,\n            shadowOffset: 20,\n            shadowScale: 0.94,\n        }\n    };\n    doctorData: IDoctorSearch;\n    slots: [] = [];\n\n    constructor(private router: Router, private doctorService: DoctorService) {\n        this.doctorData = this.router.getCurrentNavigation().extras.state.doctorData;\n    }\n\n    ngOnInit() {\n        this.getDoctorSlots();\n    }\n\n    getDoctorSlots() {\n        let doctor = this.doctorData.id ? this.doctorData.id : this.doctorData['doctorId'];\n        console.log(doctor);\n        this.doctorService.getSlots(doctor).subscribe((res: { result }) => {\n            this.slots = res.result.slots_data;\n        });\n    }\n\n    onBooking() {\n        this.router.navigate(['/doctor/doctor-booking-date'], {\n            state: {\n                doctorData: this.doctorData,\n                slotData: this.slots\n            }\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {DataService} from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DoctorService {\n\n    constructor(private dataService: DataService) {\n    }\n\n    getSlots(id: number) {\n        return this.dataService.post('api/doctor_slots', {params: {doctor_id: id}});\n    }\n\n    getSlotLines(id: number) {\n        return this.dataService.post('api/get_slot_lines', {params: {slot_id: id}});\n    }\n\n    confirmAppointment(doctorId: number, slotLineId: number) {\n        const data = {\n            uid: localStorage.getItem('uid').toString(),\n            doctor_id: doctorId.toString(),\n            slot_line_id: slotLineId.toString()\n        };\n\n        return this.dataService.post('api/doctor_reservation', {\n            params: data\n        });\n    }\n}\n"],"sourceRoot":"webpack:///"}